name: Validate OpenAPI Specs

on:
  pull_request:
    branches: [ main ]

permissions:
  issues: write
  pull-requests: write

jobs:
  validate:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'

      - name: Install swagger-cli
        run: npm install -g swagger-cli

      - name: Validate OpenAPI specifications
        id: validate
        continue-on-error: true
        run: |
          # Отключаем немедленный выход при ошибке, чтобы собрать все ошибки в переменную
          set +e
          ERRORS=""
          # Проходим по всем файлам с расширениями YAML, YML и JSON, исключая .github
          for spec in $(find . -type f \( -iname "*.yaml" -o -iname "*.yml" -o -iname "*.json" \) ! -path "./.github/*"); do
            echo "Validating $spec"
            OUTPUT=$(swagger-cli validate "$spec" 2>&1)
            EXIT_CODE=$?
            if [ $EXIT_CODE -ne 0 ]; then
              ERRORS="${ERRORS}\nValidation failed for ${spec}:\n${OUTPUT}\n"
            fi
          done
          echo -e "$ERRORS"
          # Передаём результат в output шага, чтобы использовать его в комментарии
          echo "errors<<EOF" >> $GITHUB_OUTPUT
          echo -e "$ERRORS" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
          if [ -n "$ERRORS" ]; then
            exit 1
          fi

      - name: Post comment on PR if validation failed
        if: always()
        uses: actions/github-script@v6
        with:
          script: |
            const errors = `\n${{ steps.validate.outputs.errors }}\n`;
            if (errors.trim()) {
              github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: `:warning: **OpenAPI validation failed:**\n\`\`\`\n${errors}\n\`\`\``
              });
            }

      - name: Fail job if validation errors occurred
        if: steps.validate.outcome == 'failure'
        run: exit 1
